diff --git a/include/ogdf/basic/basic.h b/include/ogdf/basic/basic.h
index 239f0b4..931391c 100644
--- a/include/ogdf/basic/basic.h
+++ b/include/ogdf/basic/basic.h
@@ -43,41 +43,6 @@
 //! @ingroup macros
 #define OGDF_HEAVY_ASSERT(expr)
 
-#ifdef OGDF_DEBUG
-# ifdef OGDF_HEAVY_DEBUG
-#  undef OGDF_HEAVY_ASSERT
-#  define OGDF_HEAVY_ASSERT(expr) OGDF_ASSERT(expr)
-# endif
-# undef OGDF_ASSERT
-# ifndef OGDF_USE_ASSERT_EXCEPTIONS
-#  include <cassert>
-#  define OGDF_ASSERT(expr) assert(expr)
-# else
-#  include <stdexcept>
-#  include <sstream>
-
-namespace ogdf {
-/**
- * A trivial exception for failed assertions.
- * Only available if the macro OGDF_USE_ASSERT_EXCEPTIONS is defined.
- */
-class AssertionFailed : public std::runtime_error {
-	using std::runtime_error::runtime_error;
-};
-}
-
-#  define OGDF_ASSERT(expr) do { \
-	if (!(expr)) { \
-		std::stringstream ogdf_assert_ss; \
-		ogdf_assert_ss \
-		 << "OGDF assertion `" #expr "' failed at " __FILE__ ":" \
-		 << __LINE__ \
-		 << "(" << OGDF_FUNCTION_NAME << ")"; \
-		ogdf::get_stacktrace(ogdf_assert_ss); \
-		throw ogdf::AssertionFailed(ogdf_assert_ss.str()); \
-	} } while (false)
-# endif
-#endif
 
 //! @}
 
diff --git a/src/ogdf/fileformats/SvgPrinter.cpp b/src/ogdf/fileformats/SvgPrinter.cpp
index 93dd20d..a4fc87d 100644
--- a/src/ogdf/fileformats/SvgPrinter.cpp
+++ b/src/ogdf/fileformats/SvgPrinter.cpp
@@ -63,7 +63,7 @@ bool SvgPrinter::draw(std::ostream &os)
 	drawEdges(rootNode);
 	drawNodes(rootNode);
 
-	doc.save(os);
+	doc.save(os, "");
 
 	return true;
 }
@@ -143,7 +143,7 @@ void SvgPrinter::drawNode(pugi::xml_node xmlNode, node v)
 	std::stringstream is;
 	double x = m_attr.x(v);
 	double y = m_attr.y(v);
-	xmlNode = xmlNode.append_child("g");
+	//xmlNode = xmlNode.append_child("g");
 
 	// values are precomputed to save expensive sin/cos calls
 	switch (m_attr.shape(v)) {
@@ -327,7 +327,8 @@ void SvgPrinter::drawClusters(pugi::xml_node xmlNode)
 
 	while(!queue.empty()) {
 		cluster c = queue.pop();
-		drawCluster(xmlNode.append_child("g"), c);
+		//drawCluster(xmlNode.append_child("g"), c);
+		drawCluster(xmlNode, c);
 
 		for(cluster child : c->children) {
 			queue.append(child);
@@ -338,7 +339,7 @@ void SvgPrinter::drawClusters(pugi::xml_node xmlNode)
 void SvgPrinter::drawEdges(pugi::xml_node xmlNode)
 {
 	if (m_attr.has(GraphAttributes::edgeGraphics)) {
-		xmlNode = xmlNode.append_child("g");
+		//xmlNode = xmlNode.append_child("g");
 
 		for(edge e : m_attr.constGraph().edges) {
 			drawEdge(xmlNode, e);
@@ -423,7 +424,7 @@ void SvgPrinter::drawEdge(pugi::xml_node xmlNode, edge e) {
 		}
 	}
 
-	xmlNode = xmlNode.append_child("g");
+	//xmlNode = xmlNode.append_child("g");
 	bool drawLabel = m_attr.has(GraphAttributes::edgeLabel) && !m_attr.label(e).empty();
 	pugi::xml_node label;
 
